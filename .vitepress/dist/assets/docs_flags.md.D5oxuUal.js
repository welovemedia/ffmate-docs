import{_ as o,c as t,o as a,a2 as s}from"./chunks/framework.COcSrLCv.js";const f=JSON.parse('{"title":"Command-Line Flags and Options","description":"","frontmatter":{},"headers":[],"relativePath":"docs/flags.md","filePath":"docs/flags.md","lastUpdated":1746569539000}'),l={name:"docs/flags.md"};function r(n,e,d,i,c,g){return a(),t("div",null,e[0]||(e[0]=[s('<h1 id="command-line-flags-and-options" tabindex="-1">Command-Line Flags and Options <a class="header-anchor" href="#command-line-flags-and-options" aria-label="Permalink to &quot;Command-Line Flags and Options&quot;">​</a></h1><p>The <code>ffmate</code> binary offers several command-line flags to customize its behavior when starting the server or performing other actions. These flags allow you to configure paths, ports, operational parameters, and debugging options.</p><p>You can typically see a list of available commands and their flags by running <code>ffmate --help</code> or <code>ffmate &lt;command&gt; --help</code>.</p><h3 id="global-flags" tabindex="-1">Global Flags <a class="header-anchor" href="#global-flags" aria-label="Permalink to &quot;Global Flags&quot;">​</a></h3><p>These flags can usually be used with any <code>ffmate</code> command (like <code>server</code>, <code>update</code>, <code>reset</code>).</p><ul><li><strong><code>-d, --debug &lt;namespaces&gt;</code></strong> or <strong><code>--debug=&quot;&lt;namespaces&gt;&quot;</code></strong><ul><li><strong>Purpose:</strong> Enables detailed debug logging for specific parts of the application. <code>ffmate</code> uses the <code>debugo</code> library for this.</li><li><strong>Value:</strong> A comma-separated list of namespaces or wildcards. <ul><li><code>&quot;*&quot;</code>: Enables all debug messages.</li><li><code>&quot;gin&quot;</code>: Enables debug messages specifically from the Gin web framework components.</li><li><code>&quot;queue&quot;</code>: Enables debug messages from the task queue processing logic.</li><li><code>&quot;sev:webhook&quot;</code>: Enables debug messages for webhook firing from the internal <code>sev</code> framework.</li><li>You can combine them: <code>&quot;*,-gin&quot;</code> (all except gin) or <code>&quot;queue,ffmpeg&quot;</code> (only queue and ffmpeg).</li></ul></li><li><strong>Environment Variable:</strong> Debug namespaces can also be set using the <code>DEBUGO</code> environment variable. If both are set, the command-line flag usually takes precedence.</li><li><strong>Default:</strong> Debug logging is off by default.</li></ul></li></ul><h3 id="server-command-flags" tabindex="-1"><code>server</code> Command Flags <a class="header-anchor" href="#server-command-flags" aria-label="Permalink to &quot;`server` Command Flags&quot;">​</a></h3><p>These flags are specific to the <code>ffmate server</code> command, which starts the main <code>ffmate</code> application (API, Web UI, queue processor, etc.).</p><ul><li><p><strong><code>-f, --ffmpeg &lt;path&gt;</code></strong> or <strong><code>--ffmpeg=&quot;&lt;path&gt;&quot;</code></strong></p><ul><li><strong>Purpose:</strong> Specifies the path to the <code>ffmpeg</code> executable.</li><li><strong>Value:</strong> The full path to your <code>ffmpeg</code> binary.</li><li><strong>Default:</strong> <code>ffmpeg</code> (assumes <code>ffmpeg</code> is in your system&#39;s <code>PATH</code>).</li><li><strong>Example:</strong> <code>ffmate server --ffmpeg=&quot;/usr/local/bin/ffmpeg&quot;</code></li></ul></li><li><p><strong><code>-p, --port &lt;port_number&gt;</code></strong> or <strong><code>--port=&quot;&lt;port_number&gt;&quot;</code></strong></p><ul><li><strong>Purpose:</strong> Sets the port number on which the <code>ffmate</code> server (API and Web UI) will listen.</li><li><strong>Value:</strong> A valid port number.</li><li><strong>Default:</strong> <code>3000</code></li><li><strong>Example:</strong> <code>ffmate server --port=&quot;8080&quot;</code></li></ul></li><li><p><strong><code>-t, --tray</code></strong></p><ul><li><strong>Purpose:</strong> Enables the system tray icon (experimental). When enabled, <code>ffmate</code> will show an icon in your system tray with status information and basic controls.</li><li><strong>Value:</strong> Not applicable (flag is either present or absent).</li><li><strong>Default:</strong> <code>false</code> (tray icon is disabled).</li><li><strong>Example:</strong> <code>ffmate server --tray</code></li></ul></li><li><p><strong><code>-b, --database &lt;path&gt;</code></strong> or <strong><code>--database=&quot;&lt;path&gt;&quot;</code></strong></p><ul><li><strong>Purpose:</strong> Specifies the path to the SQLite database file where <code>ffmate</code> stores its data (tasks, presets, webhooks, etc.).</li><li><strong>Value:</strong> A file path. <ul><li>If prefixed with <code>~/</code> (e.g., <code>~/.ffmate/data.sqlite</code>), <code>~</code> will be expanded to your home directory.</li></ul></li><li><strong>Default:</strong> <code>~/.ffmate/db.sqlite</code></li><li><strong>Example:</strong> <code>ffmate server --database=&quot;/var/lib/ffmate/production.db&quot;</code></li></ul></li><li><p><strong><code>-m, --max-concurrent-tasks &lt;number&gt;</code></strong> or <strong><code>--max-concurrent-tasks=&quot;&lt;number&gt;&quot;</code></strong></p><ul><li><strong>Purpose:</strong> Defines the maximum number of <code>ffmpeg</code> tasks that <code>ffmate</code> will run simultaneously.</li><li><strong>Value:</strong> A positive integer.</li><li><strong>Default:</strong> <code>3</code></li><li><strong>Example:</strong> <code>ffmate server --max-concurrent-tasks=&quot;5&quot;</code> (allows up to 5 tasks to run at once)</li></ul></li><li><p><strong><code>-s, --send-telemetry &lt;true|false&gt;</code></strong> or <strong><code>--send-telemetry=&lt;true|false&gt;</code></strong></p><ul><li><strong>Purpose:</strong> Enables or disables the sending of anonymous usage telemetry data to <code>telemetry.ffmate.io</code>. This data helps the developers understand how <code>ffmate</code> is used and improve the product.</li><li><strong>Value:</strong> <code>true</code> or <code>false</code>.</li><li><strong>Default:</strong> <code>true</code> (telemetry is enabled).</li><li><strong>Example:</strong> <code>ffmate server --send-telemetry=false</code></li></ul></li></ul><h3 id="update-command-flags" tabindex="-1"><code>update</code> Command Flags <a class="header-anchor" href="#update-command-flags" aria-label="Permalink to &quot;`update` Command Flags&quot;">​</a></h3><p>These flags are specific to the <code>ffmate update</code> command, which checks for and applies updates to the <code>ffmate</code> binary itself.</p><ul><li><strong><code>--dry</code></strong><ul><li><strong>Purpose:</strong> Performs a &quot;dry run&quot; of the update check. It will report if an update is available but will not actually download or install it.</li><li><strong>Value:</strong> Not applicable (flag is either present or absent).</li><li><strong>Default:</strong> <code>false</code> (updates are applied if available).</li><li><strong>Example:</strong> <code>ffmate update --dry</code></li></ul></li></ul><h3 id="reset-command-flags" tabindex="-1"><code>reset</code> Command Flags <a class="header-anchor" href="#reset-command-flags" aria-label="Permalink to &quot;`reset` Command Flags&quot;">​</a></h3><p>These flags are specific to the <code>ffmate reset</code> command, which is used to reset the status of any tasks that were marked as <code>RUNNING</code> to <code>DONE_CANCELED</code>. This can be useful if <code>ffmate</code> was shut down unexpectedly while tasks were in progress.</p><h3 id="how-flags-are-processed" tabindex="-1">How Flags are Processed <a class="header-anchor" href="#how-flags-are-processed" aria-label="Permalink to &quot;How Flags are Processed&quot;">​</a></h3><p><code>ffmate</code> uses the Viper library for configuration management. This means that flag values can often be overridden by environment variables or configuration files if <code>ffmate</code> were set up to use them (though the provided code primarily focuses on flags and defaults). Command-line flags generally have the highest precedence.</p><h3 id="example-usage" tabindex="-1">Example Usage <a class="header-anchor" href="#example-usage" aria-label="Permalink to &quot;Example Usage&quot;">​</a></h3><p>Starting the <code>ffmate</code> server with a custom port, a specific <code>ffmpeg</code> binary, and disabling telemetry: <code>ffmate server --port=&quot;3030&quot; --ffmpeg=&quot;/opt/custom_ffmpeg/bin/ffmpeg&quot; --send-telemetry=false --debug=&quot;queue,api&quot;</code></p><p>Checking for updates without applying them: <code>ffmate update --dry</code></p>',19)]))}const m=o(l,[["render",r]]);export{f as __pageData,m as default};
