import{_ as t,c as s,o as a,a2 as i}from"./chunks/framework.COcSrLCv.js";const c=JSON.parse('{"title":"Webhooks","description":"","frontmatter":{},"headers":[],"relativePath":"docs/webhooks.md","filePath":"docs/webhooks.md","lastUpdated":1746569539000}'),o={name:"docs/webhooks.md"};function n(h,e,d,r,l,p){return a(),s("div",null,e[0]||(e[0]=[i(`<h1 id="webhooks" tabindex="-1">Webhooks <a class="header-anchor" href="#webhooks" aria-label="Permalink to &quot;Webhooks&quot;">​</a></h1><p>FFmate supports <strong>webhooks</strong>, allowing external systems to receive <strong>real-time notifications</strong> when specific events occur. By registering a webhook, you can automatically trigger actions in response to changes in FFmate, such as task creation, status updates, batch processing, or preset modifications.</p><h2 id="setting-up-a-webhook" tabindex="-1">Setting Up a Webhook <a class="header-anchor" href="#setting-up-a-webhook" aria-label="Permalink to &quot;Setting Up a Webhook&quot;">​</a></h2><p>To configure a webhook, make a <code>POST</code> request to the API with the event you want to subscribe to and the URL where FFmate should send notifications.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -X</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> POST</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http://localhost:3000/api/v1/webhooks</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     -H</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Content-Type: application/json&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     -d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;{</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">       &quot;event&quot;: &quot;task.created&quot;,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">       &quot;url&quot;: &quot;https://yourserver.com/webhook-handler&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">     }&#39;</span></span></code></pre></div><h3 id="webhook-payload" tabindex="-1">Webhook Payload: <a class="header-anchor" href="#webhook-payload" aria-label="Permalink to &quot;Webhook Payload:&quot;">​</a></h3><p>When the specified event occurs, FFmate will send an HTTP <code>POST</code> request to the provided URL with relevant event data.</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;event&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;task.created&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;timestamp&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;2025-02-13T14:05:32Z&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;data&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;taskId&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;550e8400-e29b-41d4-a716-446655440000&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;inputFile&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/source/video.mp4&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;outputFile&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/destination/video_converted.mp4&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;status&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;queued&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="available-webhook-events" tabindex="-1">Available Webhook Events <a class="header-anchor" href="#available-webhook-events" aria-label="Permalink to &quot;Available Webhook Events&quot;">​</a></h2><p>FFmate provides a variety of webhook events, grouped into different categories:</p><h3 id="task-events" tabindex="-1">Task Events: <a class="header-anchor" href="#task-events" aria-label="Permalink to &quot;Task Events:&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Event</th><th>Description</th></tr></thead><tbody><tr><td><code>task.created</code></td><td>Triggered when a new task is added.</td></tr><tr><td><code>task.updated</code></td><td>Triggered when a task&#39;s status or details are updated.</td></tr><tr><td><code>task.deleted</code></td><td>Triggered when a task is deleted.</td></tr></tbody></table><hr><h3 id="batch-events" tabindex="-1">Batch Events: <a class="header-anchor" href="#batch-events" aria-label="Permalink to &quot;Batch Events:&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Event</th><th>Description</th></tr></thead><tbody><tr><td><code>batch.created</code></td><td>Triggered when a new batch of tasks is created.</td></tr><tr><td><code>batch.finished</code></td><td>Triggered when a batch of tasks is completed.</td></tr></tbody></table><hr><h3 id="preset-events" tabindex="-1">Preset Events: <a class="header-anchor" href="#preset-events" aria-label="Permalink to &quot;Preset Events:&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Event</th><th>Description</th></tr></thead><tbody><tr><td><code>preset.created</code></td><td>Triggered when a new preset is created.</td></tr><tr><td><code>preset.updated</code></td><td>Triggered when an existing preset is modified.</td></tr><tr><td><code>preset.deleted</code></td><td>Triggered when a preset is removed.</td></tr></tbody></table><hr><h3 id="watchfolder-events" tabindex="-1">Watchfolder Events: <a class="header-anchor" href="#watchfolder-events" aria-label="Permalink to &quot;Watchfolder Events:&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Event</th><th>Description</th></tr></thead><tbody><tr><td><code>watchfolder.created</code></td><td>Triggered when a new watchfolder is created.</td></tr><tr><td><code>watchfolder.updated</code></td><td>Triggered when an existing watchfolder is modified.</td></tr><tr><td><code>watchfolder.deleted</code></td><td>Triggered when a watchfolder is removed.</td></tr></tbody></table><hr><h3 id="webhook-events" tabindex="-1">Webhook Events : <a class="header-anchor" href="#webhook-events" aria-label="Permalink to &quot;Webhook Events :&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Event</th><th>Description</th></tr></thead><tbody><tr><td><code>webhook.created</code></td><td>Triggered when a new webhook is registered.</td></tr><tr><td><code>webhook.deleted</code></td><td>Triggered when a webhook is removed.</td></tr></tbody></table><h2 id="deleting-a-webhook" tabindex="-1">Deleting a Webhook <a class="header-anchor" href="#deleting-a-webhook" aria-label="Permalink to &quot;Deleting a Webhook&quot;">​</a></h2><p>To remove a webhook, send a <code>DELETE</code> request with its ID:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -X</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> DELETE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http://localhost:3000/api/v1/webhooks/{webhookId}</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     -H</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;accept: application/json&quot;</span></span></code></pre></div><h2 id="setting-up-your-webhook-endpoint" tabindex="-1">Setting Up Your Webhook Endpoint <a class="header-anchor" href="#setting-up-your-webhook-endpoint" aria-label="Permalink to &quot;Setting Up Your Webhook Endpoint&quot;">​</a></h2><p>When FFmate sends a webhook, it expects your server to be ready to receive and respond to the event. Here&#39;s what your endpoint should do:</p><ol><li><strong>Accept HTTP POST requests</strong></li></ol><p>FFmate sends events using a <code>POST</code> request with a JSON payload.<br> Your endpoint should be configured to accept and correctly parse these requests.</p><ol start="2"><li><strong>Return a 200 OK response</strong></li></ol><p>To confirm that the event was received successfully, your server <strong>must</strong> return an HTTP <code>200 OK</code> status.<br> Any other status code may cause FFmate to assume the delivery failed.</p><ol start="3"><li><strong>Log incoming requests</strong></li></ol><p>FFmate <strong>does not store webhook logs</strong>.<br> If something goes wrong, your application should log incoming webhook events to support debugging or auditing.</p>`,35)]))}const g=t(o,[["render",n]]);export{c as __pageData,g as default};
