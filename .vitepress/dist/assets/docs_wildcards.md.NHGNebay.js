import{_ as s,c as a,o as i,a2 as e}from"./chunks/framework.COcSrLCv.js";const u=JSON.parse('{"title":"Dynamic Wildcards","description":"","frontmatter":{},"headers":[],"relativePath":"docs/wildcards.md","filePath":"docs/wildcards.md","lastUpdated":1746569539000}'),n={name:"docs/wildcards.md"};function l(d,t,o,h,p,r){return i(),a("div",null,t[0]||(t[0]=[e('<h1 id="dynamic-wildcards" tabindex="-1">Dynamic Wildcards <a class="header-anchor" href="#dynamic-wildcards" aria-label="Permalink to &quot;Dynamic Wildcards&quot;">​</a></h1><p>FFmate&#39;s dynamic wildcards are designed for smart, customizable file and directory naming. Instead of tedious manual setup for each output, FFmate allows you to use placeholders. These placeholders provide a flexible method to dynamically generate both filenames and directory paths, as FFmate intelligently replaces them with actual data as it processes your tasks. Essentially, placeholders deliver a simple yet efficient way to achieve truly dynamic and automated filename and directory naming within FFmate.</p><p>For example, you can include the <strong>date, time, input file name, or a unique ID</strong> in your output file names. This helps keep your files <strong>organized, consistent, and easy to track</strong>, without extra effort.</p><h2 id="input-output-file-information" tabindex="-1">Input &amp; Output File Information <a class="header-anchor" href="#input-output-file-information" aria-label="Permalink to &quot;Input &amp; Output File Information&quot;">​</a></h2><h3 id="full-file-path" tabindex="-1">Full File Path: <a class="header-anchor" href="#full-file-path" aria-label="Permalink to &quot;Full File Path:&quot;">​</a></h3><p>These wildcards return the <strong>complete file path</strong>, including the directory, filename, and extension.</p><table tabindex="0"><thead><tr><th>Wildcard</th><th>Description</th><th>Example Output</th></tr></thead><tbody><tr><td><code>${INPUT_FILE}</code></td><td>Full path of the input file</td><td><code>/source/input.mp4</code></td></tr><tr><td><code>${OUTPUT_FILE}</code></td><td>Full path of the output file</td><td><code>/destination/output.mp4</code></td></tr></tbody></table><h4 id="example" tabindex="-1">Example: <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example:&quot;">​</a></h4><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -X</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> POST</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http://localhost:3000/api/v1/tasks</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     -H</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Content-Type: application/json&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     -d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;{</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">       &quot;command&quot;: &quot;-y -i ${INPUT_FILE} -c:v libx264 -preset fast -crf 23 ${OUTPUT_FILE}&quot;,</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">       &quot;inputFile&quot;: &quot;/volumes/ffmate/source/input.mp4&quot;,</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">       &quot;outputFile&quot;: &quot;/volumes/ffmate/destination/output.mp4&quot;</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">     }&#39;</span></span></code></pre></div><h3 id="filename-information" tabindex="-1">Filename Information: <a class="header-anchor" href="#filename-information" aria-label="Permalink to &quot;Filename Information:&quot;">​</a></h3><p>These wildcards return the <strong>filename</strong> from the full path, either with or without the extension.</p><table tabindex="0"><thead><tr><th>Wildcard</th><th>Description</th><th>Example Output</th></tr></thead><tbody><tr><td><code>${INPUT_FILE_BASE}</code></td><td>Filename with extension (without the path)</td><td><code>input.mp4</code></td></tr><tr><td><code>${OUTPUT_FILE_BASE}</code></td><td>Filename with extension (without the path)</td><td><code>output.mp4</code></td></tr><tr><td><code>${INPUT_FILE_BASENAME}</code></td><td>Filename without extension</td><td><code>input</code></td></tr><tr><td><code>${OUTPUT_FILE_BASENAME}</code></td><td>Filename without extension</td><td><code>output</code></td></tr></tbody></table><h4 id="example-1" tabindex="-1">Example: <a class="header-anchor" href="#example-1" aria-label="Permalink to &quot;Example:&quot;">​</a></h4><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -X</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> POST</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http://localhost:3000/api/v1/tasks</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     -H</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Content-Type: application/json&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     -d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;{</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">       &quot;command&quot;: &quot;-y -i ${INPUT_FILE} -c:v libx264 -preset fast -crf 23 ${OUTPUT_FILE}.mkv&quot;,</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">       &quot;inputFile&quot;: &quot;/volumes/ffmate/videos/original_movie.mp4&quot;,</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">       &quot;outputFile&quot;: &quot;/volumes/ffmate/converted/${INPUT_FILE_BASENAME}&quot;</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">     }&#39;</span></span></code></pre></div><h4 id="output-path" tabindex="-1">Output Path: <a class="header-anchor" href="#output-path" aria-label="Permalink to &quot;Output Path:&quot;">​</a></h4><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/volumes/ffmate/converted/input.mkv</span></span></code></pre></div><hr><h3 id="file-extensions-and-directory-path" tabindex="-1">File Extensions and Directory Path: <a class="header-anchor" href="#file-extensions-and-directory-path" aria-label="Permalink to &quot;File Extensions and Directory Path:&quot;">​</a></h3><p>These wildcards return <strong>the file extension</strong> and the <strong>directory path</strong>.</p><table tabindex="0"><thead><tr><th>Wildcard</th><th>Description</th><th>Example Output</th></tr></thead><tbody><tr><td><code>${INPUT_FILE_EXTENSION}</code></td><td>File extension of the input file</td><td><code>.mp4</code></td></tr><tr><td><code>${OUTPUT_FILE_EXTENSION}</code></td><td>File extension of the output file</td><td><code>.mp4</code></td></tr><tr><td><code>${INPUT_FILE_DIR}</code></td><td>Directory path of the input file</td><td><code>/source</code></td></tr><tr><td><code>${OUTPUT_FILE_DIR}</code></td><td>Directory path of the output file</td><td><code>/destination</code></td></tr></tbody></table><h4 id="example-2" tabindex="-1">Example: <a class="header-anchor" href="#example-2" aria-label="Permalink to &quot;Example:&quot;">​</a></h4><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -X</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> POST</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http://localhost:3000/api/v1/tasks</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     -H</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Content-Type: application/json&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     -d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;{</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">       &quot;command&quot;: &quot;-y -i ${INPUT_FILE} -c:v libx264 -preset fast -crf 23 ${OUTPUT_FILE}&quot;,</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">       &quot;inputFile&quot;: &quot;/volumes/ffmate/source/video.mp4&quot;,</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">       &quot;outputFile&quot;: &quot;/volumes/ffmate/destination/${INPUT_FILE_BASENAME}_converted${INPUT_FILE_EXTENSION}&quot;</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">     }&#39;</span></span></code></pre></div><h4 id="output-path-1" tabindex="-1">Output Path: <a class="header-anchor" href="#output-path-1" aria-label="Permalink to &quot;Output Path:&quot;">​</a></h4><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/volumes/ffmate/destination/input_converted.mp4</span></span></code></pre></div><h2 id="date-time-wildcards" tabindex="-1">Date &amp; Time Wildcards <a class="header-anchor" href="#date-time-wildcards" aria-label="Permalink to &quot;Date &amp; Time Wildcards&quot;">​</a></h2><p>These wildcards insert <strong>dynamic timestamps</strong> into your output paths, making it easy to organize processed files based on date and time.</p><table tabindex="0"><thead><tr><th>Wildcard</th><th>Description</th><th>Example Output</th></tr></thead><tbody><tr><td><code>${DATE_YEAR}</code></td><td>Full year (4 digits)</td><td><code>2024</code></td></tr><tr><td><code>${DATE_SHORTYEAR}</code></td><td>Short year (last 2 digits)</td><td><code>24</code></td></tr><tr><td><code>${DATE_MONTH}</code></td><td>Month number (01-12)</td><td><code>01</code></td></tr><tr><td><code>${DATE_DAY}</code></td><td>Day of the month (01-31)</td><td><code>15</code></td></tr><tr><td><code>${DATE_WEEK}</code></td><td>ISO week number (01-52)</td><td><code>03</code></td></tr><tr><td><code>${TIME_HOUR}</code></td><td>Hour (24-hour format, 00-23)</td><td><code>14</code></td></tr><tr><td><code>${TIME_MINUTE}</code></td><td>Minute (00-59)</td><td><code>05</code></td></tr><tr><td><code>${TIME_SECOND}</code></td><td>Second (00-59)</td><td><code>32</code></td></tr></tbody></table><h4 id="example-3" tabindex="-1">Example: <a class="header-anchor" href="#example-3" aria-label="Permalink to &quot;Example:&quot;">​</a></h4><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -X</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> POST</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http://localhost:3000/api/v1/tasks</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     -H</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Content-Type: application/json&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     -d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;{</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">       &quot;command&quot;: &quot;-y -i ${INPUT_FILE} -c:v libx264 -preset fast -crf 23 ${OUTPUT_FILE}&quot;,</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">       &quot;inputFile&quot;: &quot;/volumes/ffmate/source/video.mp4&quot;,</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">       &quot;outputFile&quot;: &quot;/volumes/ffmate/destination/${DATE_YEAR}/${DATE_MONTH}/${DATE_DAY}/video_${TIME_HOUR}-${TIME_MINUTE}-${TIME_SECOND}.mp4&quot;,</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">       &quot;priority&quot;: 2</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">     }&#39;</span></span></code></pre></div><h4 id="output-path-2" tabindex="-1">Output Path: <a class="header-anchor" href="#output-path-2" aria-label="Permalink to &quot;Output Path:&quot;">​</a></h4><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/volumes/ffmate//destination/2024/02/15/video_14-30-45.mp4</span></span></code></pre></div><h2 id="⏳-timestamps" tabindex="-1">⏳ Timestamps <a class="header-anchor" href="#⏳-timestamps" aria-label="Permalink to &quot;⏳ Timestamps&quot;">​</a></h2><p>These wildcards generate <strong>precise timestamps</strong> to create unique file and directory names based on the <strong>current time</strong>.</p><table tabindex="0"><thead><tr><th>Wildcard</th><th>Description</th><th>Example Output</th></tr></thead><tbody><tr><td><code>${TIMESTAMP_SECONDS}</code></td><td>Unix timestamp in seconds</td><td><code>1705318712</code></td></tr><tr><td><code>${TIMESTAMP_MILLISECONDS}</code></td><td>Unix timestamp with milliseconds precision</td><td><code>1705318712123</code></td></tr><tr><td><code>${TIMESTAMP_MICROSECONDS}</code></td><td>Unix timestamp with microseconds precision</td><td><code>1705318712123456</code></td></tr><tr><td><code>${TIMESTAMP_NANOSECONDS}</code></td><td>Unix timestamp with nanoseconds precision</td><td><code>1705318712123456789</code></td></tr></tbody></table><h4 id="example-4" tabindex="-1">Example: <a class="header-anchor" href="#example-4" aria-label="Permalink to &quot;Example:&quot;">​</a></h4><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -X</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> POST</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http://localhost:3000/api/v1/tasks</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     -H</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Content-Type: application/json&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     -d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;{</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">       &quot;command&quot;: &quot;-y -i ${INPUT_FILE} -c:v libx264 -preset fast -crf 23 ${OUTPUT_FILE}&quot;,</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">       &quot;inputFile&quot;: &quot;/volumes/ffmate/source/video.mp4&quot;,</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">       &quot;outputFile&quot;: &quot;/volumes/ffmate/destination/video_${TIMESTAMP_SECONDS}.mp4&quot;</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">     }&#39;</span></span></code></pre></div><h4 id="output-path-3" tabindex="-1">Output Path: <a class="header-anchor" href="#output-path-3" aria-label="Permalink to &quot;Output Path:&quot;">​</a></h4><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/volumes/ffmate/destination/video_1705318712.mp4</span></span></code></pre></div><h2 id="system-information" tabindex="-1">System Information <a class="header-anchor" href="#system-information" aria-label="Permalink to &quot;System Information&quot;">​</a></h2><p>These wildcards return <strong>system information</strong>, specifically the <strong>operating system name</strong> and <strong>CPU architecture</strong>.</p><table tabindex="0"><thead><tr><th>Wildcard</th><th>Description</th><th>Example Output</th></tr></thead><tbody><tr><td><code>${OS_NAME}</code></td><td>Operating system name</td><td><code>linux</code></td></tr><tr><td><code>${OS_ARCH}</code></td><td>CPU architecture</td><td><code>amd64</code></td></tr></tbody></table><h4 id="example-5" tabindex="-1">Example: <a class="header-anchor" href="#example-5" aria-label="Permalink to &quot;Example:&quot;">​</a></h4><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -X</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> POST</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http://localhost:3000/api/v1/tasks</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     -H</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Content-Type: application/json&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     -d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;{</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">       &quot;command&quot;: &quot;-y -i ${INPUT_FILE} -c:v libx264 -preset fast -crf 23 ${OUTPUT_FILE}&quot;,</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">       &quot;inputFile&quot;: &quot;/volumes/ffmate/source/video.mp4&quot;,</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">       &quot;outputFile&quot;: &quot;/volumes/ffmate/processed/${OS_NAME}/${OS_ARCH}/video.mp4&quot;</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">     }&#39;</span></span></code></pre></div><h4 id="output-path-4" tabindex="-1">Output Path: <a class="header-anchor" href="#output-path-4" aria-label="Permalink to &quot;Output Path:&quot;">​</a></h4><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/volumes/ffmate/processed/linux/amd64/video.mp4</span></span></code></pre></div><h2 id="unique-identifier" tabindex="-1">Unique Identifier <a class="header-anchor" href="#unique-identifier" aria-label="Permalink to &quot;Unique Identifier&quot;">​</a></h2><p>This wildcard generate <strong>random unique identifiers</strong>.</p><table tabindex="0"><thead><tr><th>Wildcard</th><th>Description</th><th>Example Output</th></tr></thead><tbody><tr><td><code>${UUID}</code></td><td>Randomly generated UUID (v4)</td><td><code>550e8400-e29b-41d4-a716-446655440000</code></td></tr></tbody></table><h4 id="example-6" tabindex="-1">Example: <a class="header-anchor" href="#example-6" aria-label="Permalink to &quot;Example:&quot;">​</a></h4><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -X</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> POST</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http://localhost:3000/api/v1/tasks</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     -H</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Content-Type: application/json&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     -d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;{</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">       &quot;command&quot;: &quot;-y -i ${INPUT_FILE} -c:v libx264 -preset fast -crf 23 ${OUTPUT_FILE}&quot;,</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">       &quot;inputFile&quot;: &quot;/volumes/ffmate/source/video.mp4&quot;,</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">       &quot;outputFile&quot;: &quot;/volumes/ffmate/processed/${UUID}_video.mp4&quot;</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">     }&#39;</span></span></code></pre></div><h4 id="output-path-5" tabindex="-1">Output Path: <a class="header-anchor" href="#output-path-5" aria-label="Permalink to &quot;Output Path:&quot;">​</a></h4><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/volumes/ffmate/processed/550e8400-e29b-41d4-a716-446655440000_video.mp4</span></span></code></pre></div>',52)]))}const k=s(n,[["render",l]]);export{u as __pageData,k as default};
