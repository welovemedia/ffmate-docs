import{_ as a,c as t,o as i,a2 as o}from"./chunks/framework.COcSrLCv.js";const f=JSON.parse('{"title":"What is FFmate?","description":"","frontmatter":{},"headers":[],"relativePath":"docs/what-is-ffmate.md","filePath":"docs/what-is-ffmate.md","lastUpdated":1739826745000}'),s={name:"docs/what-is-ffmate.md"};function n(r,e,l,d,c,m){return i(),t("div",null,e[0]||(e[0]=[o('<h1 id="what-is-ffmate" tabindex="-1">What is FFmate? <a class="header-anchor" href="#what-is-ffmate" aria-label="Permalink to &quot;What is FFmate?&quot;">​</a></h1><p><strong>FFmate is not just another media processing server, it’s a powerful extension of FFmpeg that makes it more accessible, automated, and feature-rich.</strong></p><p>While FFmpeg is an incredible media toolkit, it lacks essential capabilities like queue management, a REST API, watchfolder monitoring, out-of-the-box presets, webhook notifications, and a user-friendly interface.</p><p>FFmate fills these gaps, bringing FFmpeg’s full power to developers, workflow engineers, and non-technical users alike.</p><h2 id="🚀-key-features" tabindex="-1">🚀 Key Features <a class="header-anchor" href="#🚀-key-features" aria-label="Permalink to &quot;🚀 Key Features&quot;">​</a></h2><ul><li><strong>Queueing System</strong> – Submit and manage multiple concurrent FFmpeg jobs efficiently.</li><li><strong>Dynamic Filename Wildcards</strong> – Enable smart and customizable output file naming.</li><li><strong>Webhook Notifications</strong> – Receive real-time updates for seamless integration with external workflows.</li><li><strong>Watchfolder</strong> – Automatically detect and process new files as they appear.</li><li><strong>Pre &amp; Post Processing Actions</strong> – Execute custom commands or scripts before and after transcoding.</li><li><strong>Preconfigured Presets</strong> – Simplify common media conversion tasks with ready-to-use settings.</li><li><strong>Web UI</strong> – Monitor and configure transcoding workflows with an intuitive interface.</li></ul><div class="tip custom-block" style="padding-top:8px;"> 🔄 Want to see it in action? Skip to the <a href="/docs/getting-started">Getting started</a>. </div><h2 id="📌-use-cases" tabindex="-1">📌 Use Cases <a class="header-anchor" href="#📌-use-cases" aria-label="Permalink to &quot;📌 Use Cases&quot;">​</a></h2><h3 id="📽️-automated-media-transcoding" tabindex="-1">📽️ Automated media transcoding <a class="header-anchor" href="#📽️-automated-media-transcoding" aria-label="Permalink to &quot;📽️ Automated media transcoding&quot;">​</a></h3><p>Convert videos, extract audio, or generate thumbnails with minimal setup.</p><h2 id="⚙️-workflow-pipeline-automation" tabindex="-1">⚙️ Workflow &amp; Pipeline automation <a class="header-anchor" href="#⚙️-workflow-pipeline-automation" aria-label="Permalink to &quot;⚙️ Workflow &amp; Pipeline automation&quot;">​</a></h2><p>Webhooks provide real-time notifications for seamless integration with:</p><ul><li><strong>Internal pipeline tooling</strong></li><li><strong>Media asset management systems</strong></li><li><strong>Cloud workflows</strong></li></ul><h3 id="☁️-scalable-ffmpeg-api-backend" tabindex="-1">☁️ Scalable FFmpeg API Backend <a class="header-anchor" href="#☁️-scalable-ffmpeg-api-backend" aria-label="Permalink to &quot;☁️ Scalable FFmpeg API Backend&quot;">​</a></h3><p>Deploy FFmate as a centralized transcoding service with intelligent job management.</p><hr><h3 id="🗂️-watchfolder" tabindex="-1">🗂️ Watchfolder <a class="header-anchor" href="#🗂️-watchfolder" aria-label="Permalink to &quot;🗂️ Watchfolder&quot;">​</a></h3><p>Drop media files into a <strong>monitored folder</strong>, and FFmate will automatically process them based on predefined rules.</p>',18)]))}const p=a(s,[["render",n]]);export{f as __pageData,p as default};
